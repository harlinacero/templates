{"version":3,"sources":["src/app/shared/services/admin.service.ts","src/app/shared/services/aprovalMatrix.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Company } from '../interfaces/company.interface';\r\nimport { Product } from '../interfaces/product.interface';\r\nimport { Urls } from '../interfaces/urls';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServiceBase } from 'src/app/shared/services/service.base';\r\n\r\nimport { RequestResult } from 'src/app/shared/interfaces/requestResult.interface';\r\n\r\n\r\nimport { Providers } from 'src/app/shared/interfaces/providers.interface';\r\nimport { Person, DocumentType } from 'src/app/shared/interfaces/person.interface';\r\nimport { Role } from 'src/app/shared/interfaces/role.interface';\r\nimport { CostCenter } from 'src/app/shared/interfaces/costCenter.interface';\r\nimport { URLS } from '../globals/localStorage.const';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminService {\r\n  urls: Urls;\r\n\r\n  constructor(private http: HttpClient, private serviceBase: ServiceBase) {\r\n    this.urls = JSON.parse(localStorage.getItem(URLS));\r\n    if (this.urls === undefined) {\r\n      this.serviceBase.validateSession();\r\n    }\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.http.get<RequestResult<Person[]>>(`${this.urls.urlbase}Admin/GetAllPerson`);\r\n  }\r\n\r\n  saveUser(person: Person) {\r\n    return this.http.post<RequestResult<Person>>(`${this.urls.urlbase}Admin/SavePerson`, person);\r\n  }\r\n\r\n  getUser(id: string) {\r\n    return this.http.get<RequestResult<Person>>(`${this.urls.urlbase}Admin/SavePerson?id=${id}`);\r\n  }\r\n\r\n  getAllRoles() {\r\n    return this.http.get<RequestResult<Role[]>>(`${this.urls.urlbase}Admin/GetAllRole`);\r\n  }\r\n\r\n  saveRole(role: Role) {\r\n    return this.http.post<RequestResult<Role>>(`${this.urls.urlbase}Admin/SaveRole`, role);\r\n  }\r\n\r\n  getRole(id: string) {\r\n    return this.http.get<RequestResult<Role>>(`${this.urls.urlbase}Admin/GetRoles?id=${id}`);\r\n  }\r\n\r\n  getDocumentTypes() {\r\n    return this.http.get<RequestResult<DocumentType[]>>(`${this.urls.urlbase}Admin/GetDocumentTypes`);\r\n  }\r\n\r\n\r\n  getAllProviders() {\r\n    return this.http.get<RequestResult<Providers[]>>(`${this.urls.urlbase}Provider/GetAllProviders`);\r\n  }\r\n\r\n  saveProvider(provider: Providers) {\r\n    return this.http.post<RequestResult<Providers>>(`${this.urls.urlbase}Provider/SaveProvider`, provider);\r\n  }\r\n\r\n  getProvider(id: string) {\r\n    return this.http.get<RequestResult<Providers>>(`${this.urls.urlbase}Provider/GetProvider?id=${id}`);\r\n  }\r\n\r\n  getAllProducts() {\r\n    return this.http.get<RequestResult<Product[]>>(`${this.urls.urlbase}Product/GetAllProducts`);\r\n  }\r\n\r\n  saveProduct(product: Product) {\r\n    return this.http.post<RequestResult<Product>>(`${this.urls.urlbase}Product/SaveProduct`, product);\r\n  }\r\n\r\n  getProduct(id: string) {\r\n    return this.http.get<RequestResult<Product>>(`${this.urls.urlbase}Product/GetProduct?id=${id}`);\r\n  }\r\n\r\n  saveCostCenter(costCenter: CostCenter) {\r\n    return this.http.post<RequestResult<CostCenter>>(`${this.urls.urlbase}Company/SaveCostCenter`, costCenter);\r\n  }\r\n\r\n  getAllCostCenter() {\r\n    return this.http.get<RequestResult<CostCenter[]>>(`${this.urls.urlbase}Company/GetAllCostCenter`);\r\n  }\r\n\r\n  getCostCenter(id: string) {\r\n    return this.http.get<RequestResult<CostCenter>>(`${this.urls.urlbase}Company/GetCostCenterById?id=${id}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Urls } from '../interfaces/urls';\r\nimport { ServiceBase } from './service.base';\r\nimport { AprovalMatrix } from '../interfaces/aprovalMatrix.interface';\r\nimport { RequestResult } from '../interfaces/requestResult.interface';\r\nimport { Money } from '../interfaces/money.interface';\r\nimport { URLS } from '../globals/localStorage.const';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class AprovalMatrixService {\r\n\r\n\r\n  urls: Urls;\r\n\r\n  constructor(private http: HttpClient, private serviceBase: ServiceBase) {\r\n    this.urls = JSON.parse(localStorage.getItem(URLS));\r\n    if (this.urls === undefined) {\r\n      this.serviceBase.validateSession();\r\n    }\r\n  }\r\n\r\n  getAllMoney() {\r\n    return this.http.get<RequestResult<Money[]>>(`${this.urls.urlbase}AprovaMatrix/GetAllMoney`);\r\n  }\r\n\r\n  GetAllAprovalMatrix() {\r\n    return this.http.get<RequestResult<AprovalMatrix[]>>(`${this.urls.urlbase}AprovaMatrix/GetAllAprovalMatrix`);\r\n  }\r\n\r\n  SaveAprovalMatrix(levelsAproval: AprovalMatrix[]) {\r\n    return this.http.post<RequestResult<AprovalMatrix[]>>(`${this.urls.urlbase}AprovaMatrix/SaveAprovalMatrix`, levelsAproval);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}