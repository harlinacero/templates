{"version":3,"sources":["./src/app/shared/services/admin.service.ts","./src/app/shared/services/aprovalMatrix.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Company } from '../interfaces/company.interface';\r\nimport { Product } from '../interfaces/product.interface';\r\nimport { Urls } from '../interfaces/urls';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServiceBase } from 'src/app/shared/services/service.base';\r\n\r\nimport { RequestResult } from 'src/app/shared/interfaces/requestResult.interface';\r\n\r\n\r\nimport { Providers } from 'src/app/shared/interfaces/providers.interface';\r\nimport { Person, DocumentType } from 'src/app/shared/interfaces/person.interface';\r\nimport { Role } from 'src/app/shared/interfaces/role.interface';\r\nimport { CostCenter } from 'src/app/shared/interfaces/costCenter.interface';\r\nimport { URLS } from '../globals/localStorage.const';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminService {\r\n  urls: Urls;\r\n\r\n  constructor(private http: HttpClient, private serviceBase: ServiceBase) {\r\n    this.urls = JSON.parse(localStorage.getItem(URLS));\r\n    if (this.urls === undefined) {\r\n      this.serviceBase.validateSession();\r\n    }\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.http.get<RequestResult<Person[]>>(`${this.urls.urlbase}Admin/GetAllPerson`);\r\n  }\r\n\r\n  saveUser(person: Person) {\r\n    return this.http.post<RequestResult<Person>>(`${this.urls.urlbase}Admin/SavePerson`, person);\r\n  }\r\n\r\n  getUser(id: string) {\r\n    return this.http.get<RequestResult<Person>>(`${this.urls.urlbase}Admin/SavePerson?id=${id}`);\r\n  }\r\n\r\n  getAllRoles() {\r\n    return this.http.get<RequestResult<Role[]>>(`${this.urls.urlbase}Admin/GetAllRole`);\r\n  }\r\n\r\n  saveRole(role: Role) {\r\n    return this.http.post<RequestResult<Role>>(`${this.urls.urlbase}Admin/SaveRole`, role);\r\n  }\r\n\r\n  getRole(id: string) {\r\n    return this.http.get<RequestResult<Role>>(`${this.urls.urlbase}Admin/GetRoles?id=${id}`);\r\n  }\r\n\r\n  getDocumentTypes() {\r\n    return this.http.get<RequestResult<DocumentType[]>>(`${this.urls.urlbase}Admin/GetDocumentTypes`);\r\n  }\r\n\r\n\r\n  getAllProviders() {\r\n    return this.http.get<RequestResult<Providers[]>>(`${this.urls.urlbase}Provider/GetAllProviders`);\r\n  }\r\n\r\n  saveProvider(provider: Providers) {\r\n    return this.http.post<RequestResult<Providers>>(`${this.urls.urlbase}Provider/SaveProvider`, provider);\r\n  }\r\n\r\n  getProvider(id: string) {\r\n    return this.http.get<RequestResult<Providers>>(`${this.urls.urlbase}Provider/GetProvider?id=${id}`);\r\n  }\r\n\r\n  getAllProducts() {\r\n    return this.http.get<RequestResult<Product[]>>(`${this.urls.urlbase}Product/GetAllProducts`);\r\n  }\r\n\r\n  saveProduct(product: Product) {\r\n    return this.http.post<RequestResult<Product>>(`${this.urls.urlbase}Product/SaveProduct`, product);\r\n  }\r\n\r\n  getProduct(id: string) {\r\n    return this.http.get<RequestResult<Product>>(`${this.urls.urlbase}Product/GetProduct?id=${id}`);\r\n  }\r\n\r\n  saveCostCenter(costCenter: CostCenter) {\r\n    return this.http.post<RequestResult<CostCenter>>(`${this.urls.urlbase}Company/SaveCostCenter`, costCenter);\r\n  }\r\n\r\n  getAllCostCenter() {\r\n    return this.http.get<RequestResult<CostCenter[]>>(`${this.urls.urlbase}Company/GetAllCostCenter`);\r\n  }\r\n\r\n  getCostCenter(id: string) {\r\n    return this.http.get<RequestResult<CostCenter>>(`${this.urls.urlbase}Company/GetCostCenterById?id=${id}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Urls } from '../interfaces/urls';\r\nimport { ServiceBase } from './service.base';\r\nimport { AprovalMatrix } from '../interfaces/aprovalMatrix.interface';\r\nimport { RequestResult } from '../interfaces/requestResult.interface';\r\nimport { Money } from '../interfaces/money.interface';\r\nimport { URLS } from '../globals/localStorage.const';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class AprovalMatrixService {\r\n\r\n\r\n  urls: Urls;\r\n\r\n  constructor(private http: HttpClient, private serviceBase: ServiceBase) {\r\n    this.urls = JSON.parse(localStorage.getItem(URLS));\r\n    if (this.urls === undefined) {\r\n      this.serviceBase.validateSession();\r\n    }\r\n  }\r\n\r\n  getAllMoney() {\r\n    return this.http.get<RequestResult<Money[]>>(`${this.urls.urlbase}AprovaMatrix/GetAllMoney`);\r\n  }\r\n\r\n  GetAllAprovalMatrix() {\r\n    return this.http.get<RequestResult<AprovalMatrix[]>>(`${this.urls.urlbase}AprovaMatrix/GetAllAprovalMatrix`);\r\n  }\r\n\r\n  SaveAprovalMatrix(levelsAproval: AprovalMatrix[]) {\r\n    return this.http.post<RequestResult<AprovalMatrix[]>>(`${this.urls.urlbase}AprovaMatrix/SaveAprovalMatrix`, levelsAproval);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}